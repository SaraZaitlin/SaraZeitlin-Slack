"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require('./ApiClient');

var ChannelRequest = require('./model/ChannelRequest');

var Error = require('./model/Error');

var Form = require('./model/Form');

var FormQueryResponse = require('./model/FormQueryResponse');

var InlineResponse200 = require('./model/InlineResponse200');

var RecordCount = require('./model/RecordCount');

var SurveyScheduleRequest = require('./model/SurveyScheduleRequest');

var SurveyScheduleResponse = require('./model/SurveyScheduleResponse');

var User = require('./model/User');

var ConfigsApi = require('./api/ConfigsApi');

var FormApi = require('./api/FormApi');

var RatingCountsResponseApi = require('./api/RatingCountsResponseApi');

var ResponseApi = require('./api/ResponseApi');

var ScheduleApi = require('./api/ScheduleApi');
/**
* FormBuilder_API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FwFormBuilder = require('index'); // See note below*.
* var xxxSvc = new FwFormBuilder.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FwFormBuilder.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FwFormBuilder.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FwFormBuilder.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.0-10
*/


module.exports = {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,

  /**
   * The ChannelRequest model constructor.
   * @property {module:model/ChannelRequest}
   */
  ChannelRequest,

  /**
   * The Error model constructor.
   * @property {module:model/Error}
   */
  Error,

  /**
   * The Form model constructor.
   * @property {module:model/Form}
   */
  Form,

  /**
   * The FormQueryResponse model constructor.
   * @property {module:model/FormQueryResponse}
   */
  FormQueryResponse,

  /**
   * The InlineResponse200 model constructor.
   * @property {module:model/InlineResponse200}
   */
  InlineResponse200,

  /**
   * The RecordCount model constructor.
   * @property {module:model/RecordCount}
   */
  RecordCount,

  /**
   * The SurveyScheduleRequest model constructor.
   * @property {module:model/SurveyScheduleRequest}
   */
  SurveyScheduleRequest,

  /**
   * The SurveyScheduleResponse model constructor.
   * @property {module:model/SurveyScheduleResponse}
   */
  SurveyScheduleResponse,

  /**
   * The User model constructor.
   * @property {module:model/User}
   */
  User,

  /**
  * The ConfigsApi service constructor.
  * @property {module:api/ConfigsApi}
  */
  ConfigsApi,

  /**
  * The FormApi service constructor.
  * @property {module:api/FormApi}
  */
  FormApi,

  /**
  * The RatingCountsResponseApi service constructor.
  * @property {module:api/RatingCountsResponseApi}
  */
  RatingCountsResponseApi,

  /**
  * The ResponseApi service constructor.
  * @property {module:api/ResponseApi}
  */
  ResponseApi,

  /**
  * The ScheduleApi service constructor.
  * @property {module:api/ScheduleApi}
  */
  ScheduleApi
};