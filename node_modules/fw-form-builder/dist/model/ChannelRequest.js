"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require('../ApiClient');

var User = require('./User');
/**
 * The ChannelRequest model module.
 * @module model/ChannelRequest
 * @version 0.0.0-10
 */


class ChannelRequest {
  /**
   * Constructs a new <code>ChannelRequest</code>.
   * @alias module:model/ChannelRequest
   */
  constructor() {
    ChannelRequest.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>ChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelRequest} obj Optional instance to populate.
   * @return {module:model/ChannelRequest} The populated <code>ChannelRequest</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChannelRequest();

      if (data.hasOwnProperty('channel')) {
        obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
      }

      if (data.hasOwnProperty('account_domain')) {
        obj['account_domain'] = ApiClient.convertToType(data['account_domain'], 'String');
      }

      if (data.hasOwnProperty('account_id')) {
        obj['account_id'] = ApiClient.convertToType(data['account_id'], 'Number');
      }

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }

      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }

      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }

      if (data.hasOwnProperty('to_user')) {
        obj['to_user'] = User.constructFromObject(data['to_user']);
      }

      if (data.hasOwnProperty('from_user')) {
        obj['from_user'] = User.constructFromObject(data['from_user']);
      }

      if (data.hasOwnProperty('subject')) {
        obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
      }

      if (data.hasOwnProperty('html')) {
        obj['html'] = ApiClient.convertToType(data['html'], 'String');
      }

      if (data.hasOwnProperty('channel_id')) {
        obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'Number');
      }
    }

    return obj;
  }
  /**
       * @return {module:model/ChannelRequest.ChannelEnum}
       */


  getChannel() {
    return this.channel;
  }
  /**
   * @param {module:model/ChannelRequest.ChannelEnum} channel
   */


  setChannel(channel) {
    this['channel'] = channel;
  }
  /**
       * @return {String}
       */


  getAccountDomain() {
    return this.account_domain;
  }
  /**
   * @param {String} accountDomain
   */


  setAccountDomain(accountDomain) {
    this['account_domain'] = accountDomain;
  }
  /**
       * @return {Number}
       */


  getAccountId() {
    return this.account_id;
  }
  /**
   * @param {Number} accountId
   */


  setAccountId(accountId) {
    this['account_id'] = accountId;
  }
  /**
       * @return {String}
       */


  getType() {
    return this.type;
  }
  /**
   * @param {String} type
   */


  setType(type) {
    this['type'] = type;
  }
  /**
       * @return {String}
       */


  getText() {
    return this.text;
  }
  /**
   * @param {String} text
   */


  setText(text) {
    this['text'] = text;
  }
  /**
       * @return {Object}
       */


  getMetadata() {
    return this.metadata;
  }
  /**
   * @param {Object} metadata
   */


  setMetadata(metadata) {
    this['metadata'] = metadata;
  }
  /**
       * @return {module:model/User}
       */


  getToUser() {
    return this.to_user;
  }
  /**
   * @param {module:model/User} toUser
   */


  setToUser(toUser) {
    this['to_user'] = toUser;
  }
  /**
       * @return {module:model/User}
       */


  getFromUser() {
    return this.from_user;
  }
  /**
   * @param {module:model/User} fromUser
   */


  setFromUser(fromUser) {
    this['from_user'] = fromUser;
  }
  /**
       * @return {String}
       */


  getSubject() {
    return this.subject;
  }
  /**
   * @param {String} subject
   */


  setSubject(subject) {
    this['subject'] = subject;
  }
  /**
       * @return {String}
       */


  getHtml() {
    return this.html;
  }
  /**
   * @param {String} html
   */


  setHtml(html) {
    this['html'] = html;
  }
  /**
       * @return {Number}
       */


  getChannelId() {
    return this.channel_id;
  }
  /**
   * @param {Number} channelId
   */


  setChannelId(channelId) {
    this['channel_id'] = channelId;
  }

}
/**
 * @member {module:model/ChannelRequest.ChannelEnum} channel
 */


ChannelRequest.prototype['channel'] = undefined;
/**
 * @member {String} account_domain
 */

ChannelRequest.prototype['account_domain'] = undefined;
/**
 * @member {Number} account_id
 */

ChannelRequest.prototype['account_id'] = undefined;
/**
 * @member {String} type
 */

ChannelRequest.prototype['type'] = undefined;
/**
 * @member {String} text
 */

ChannelRequest.prototype['text'] = undefined;
/**
 * @member {Object} metadata
 */

ChannelRequest.prototype['metadata'] = undefined;
/**
 * @member {module:model/User} to_user
 */

ChannelRequest.prototype['to_user'] = undefined;
/**
 * @member {module:model/User} from_user
 */

ChannelRequest.prototype['from_user'] = undefined;
/**
 * @member {String} subject
 */

ChannelRequest.prototype['subject'] = undefined;
/**
 * @member {String} html
 */

ChannelRequest.prototype['html'] = undefined;
/**
 * @member {Number} channel_id
 */

ChannelRequest.prototype['channel_id'] = undefined;
/**
 * Allowed values for the <code>channel</code> property.
 * @enum {String}
 * @readonly
 */

ChannelRequest['ChannelEnum'] = {
  /**
   * value: "EMAIL"
   * @const
   */
  "EMAIL": "EMAIL",

  /**
   * value: "WHATSAPP"
   * @const
   */
  "WHATSAPP": "WHATSAPP"
};
module.exports = ChannelRequest;