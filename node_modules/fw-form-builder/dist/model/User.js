"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require('../ApiClient');
/**
 * The User model module.
 * @module model/User
 * @version 0.0.0-10
 */


class User {
  /**
   * Constructs a new <code>User</code>.
   * @alias module:model/User
   */
  constructor() {
    User.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new User();

      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }

      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
    }

    return obj;
  }
  /**
       * @return {String}
       */


  getEmail() {
    return this.email;
  }
  /**
   * @param {String} email
   */


  setEmail(email) {
    this['email'] = email;
  }
  /**
       * @return {String}
       */


  getName() {
    return this.name;
  }
  /**
   * @param {String} name
   */


  setName(name) {
    this['name'] = name;
  }
  /**
       * @return {String}
       */


  getPhone() {
    return this.phone;
  }
  /**
   * @param {String} phone
   */


  setPhone(phone) {
    this['phone'] = phone;
  }

}
/**
 * @member {String} email
 */


User.prototype['email'] = undefined;
/**
 * @member {String} name
 */

User.prototype['name'] = undefined;
/**
 * @member {String} phone
 */

User.prototype['phone'] = undefined;
module.exports = User;