"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require('../ApiClient');
/**
 * The FormQueryResponse model module.
 * @module model/FormQueryResponse
 * @version 0.0.0-10
 */


class FormQueryResponse {
  /**
   * Constructs a new <code>FormQueryResponse</code>.
   * @alias module:model/FormQueryResponse
   */
  constructor() {
    FormQueryResponse.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>FormQueryResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FormQueryResponse} obj Optional instance to populate.
   * @return {module:model/FormQueryResponse} The populated <code>FormQueryResponse</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FormQueryResponse();

      if (data.hasOwnProperty('records')) {
        obj['records'] = ApiClient.convertToType(data['records'], [Object]);
      }

      if (data.hasOwnProperty('links')) {
        obj['links'] = ApiClient.convertToType(data['links'], Object);
      }
    }

    return obj;
  }
  /**
       * @return {Array.<Object>}
       */


  getRecords() {
    return this.records;
  }
  /**
   * @param {Array.<Object>} records
   */


  setRecords(records) {
    this['records'] = records;
  }
  /**
       * @return {Object}
       */


  getLinks() {
    return this.links;
  }
  /**
   * @param {Object} links
   */


  setLinks(links) {
    this['links'] = links;
  }

}
/**
 * @member {Array.<Object>} records
 */


FormQueryResponse.prototype['records'] = undefined;
/**
 * @member {Object} links
 */

FormQueryResponse.prototype['links'] = undefined;
module.exports = FormQueryResponse;