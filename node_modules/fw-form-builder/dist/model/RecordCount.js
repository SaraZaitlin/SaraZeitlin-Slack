"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require('../ApiClient');
/**
 * The RecordCount model module.
 * @module model/RecordCount
 * @version 0.0.0-10
 */


class RecordCount {
  /**
   * Constructs a new <code>RecordCount</code>.
   * @alias module:model/RecordCount
   */
  constructor() {
    RecordCount.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>RecordCount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RecordCount} obj Optional instance to populate.
   * @return {module:model/RecordCount} The populated <code>RecordCount</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RecordCount();

      if (data.hasOwnProperty('count')) {
        obj['count'] = ApiClient.convertToType(data['count'], 'Number');
      }

      if (data.hasOwnProperty('measure')) {
        obj['measure'] = ApiClient.convertToType(data['measure'], 'String');
      }
    }

    return obj;
  }
  /**
       * @return {Number}
       */


  getCount() {
    return this.count;
  }
  /**
   * @param {Number} count
   */


  setCount(count) {
    this['count'] = count;
  }
  /**
       * @return {String}
       */


  getMeasure() {
    return this.measure;
  }
  /**
   * @param {String} measure
   */


  setMeasure(measure) {
    this['measure'] = measure;
  }

}
/**
 * @member {Number} count
 */


RecordCount.prototype['count'] = undefined;
/**
 * @member {String} measure
 */

RecordCount.prototype['measure'] = undefined;
module.exports = RecordCount;