"use strict";

/**
 * FormBuilder
 * FormBuilder API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
var ApiClient = require("../ApiClient");

var Error = require('../model/Error');

var SurveyScheduleRequest = require('../model/SurveyScheduleRequest');

var SurveyScheduleResponse = require('../model/SurveyScheduleResponse');
/**
* Schedule service.
* @module api/ScheduleApi
* @version 0.0.0-10
*/


module.exports = class ScheduleApi {
  /**
  * Constructs a new ScheduleApi. 
  * @alias module:api/ScheduleApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }
  /**
   * Create a survey schedule for a form
   * Create a survey schedule for a form
   * @param {String} uuid Unique Identifier of a Form
   * @param {module:model/SurveyScheduleRequest} schedulePayload 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SurveyScheduleResponse} and HTTP response
   */


  scheduleSurveyWithHttpInfo(uuid, schedulePayload) {
    let postBody = schedulePayload; // verify the required parameter 'uuid' is set

    if (uuid === undefined || uuid === null) {
      throw new Error("Missing the required parameter 'uuid' when calling scheduleSurvey");
    } // verify the required parameter 'schedulePayload' is set


    if (schedulePayload === undefined || schedulePayload === null) {
      throw new Error("Missing the required parameter 'schedulePayload' when calling scheduleSurvey");
    }

    let pathParams = {
      'uuid': uuid
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = [];
    let contentTypes = ['application/json'];
    let accepts = ['application/json'];
    let returnType = SurveyScheduleResponse;
    return this.apiClient.callApi('/forms/{uuid}/schedules', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
  }
  /**
   * Create a survey schedule for a form
   * Create a survey schedule for a form
   * @param {String} uuid Unique Identifier of a Form
   * @param {module:model/SurveyScheduleRequest} schedulePayload 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SurveyScheduleResponse}
   */


  scheduleSurvey(uuid, schedulePayload) {
    return this.scheduleSurveyWithHttpInfo(uuid, schedulePayload).then(function (response_and_data) {
      return response_and_data;
    });
  }

};